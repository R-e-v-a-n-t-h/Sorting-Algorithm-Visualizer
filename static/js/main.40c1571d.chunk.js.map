{"version":3,"sources":["Visualizer/Algorithms/insertionSort.js","Visualizer/Algorithms/bubbleSort.js","Visualizer/Algorithms/shellSort.js","Visualizer/Algorithms/heapSort.js","Visualizer/Algorithms/quickSort.js","Visualizer/Algorithms/mergeSort.js","Visualizer/Visualizer.jsx","Visualizer/Algorithms/selectionSort.js","App.js","index.js"],"names":["insertionSort","array","t","i","length","pCol","reset","sCol","bubbleSort","tCol","count","qCol","len","sorted","isSorted","shellSort","gap","Math","floor","heapSort","last","quickSort","p","tbi","tsi","findPivot","undefined","setComCol","A","col","join","arrayL","arrayR","j","mergeSort","stopIndex","mid","n1","n2","L","R","push","k","merge","platformColor","Visualizer","useState","algo","setAlgo","size","setSize","reGen","setReGen","active","setActive","activity","setActivity","disable","setDisable","createArray","arraySize","random","sizeOfArray","XS","S","M","XL","widthOfBars","sortingSpeed","endingSpeed","make","Number","map","data","arrayToSort","setArrayToSort","useEffect","selectionSort","setTimeout","x","className","id","htmlFor","disabled","name","onChange","e","target","value","onClick","style","backgroundColor","borderColor","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.40c1571d.chunk.js","sourcesContent":["import {pCol,sCol,tCol,qCol} from '../Visualizer'\r\n\r\nfunction reset(array){\r\n    for (let i=0;i<array.length;i++)\r\n        array[i][1]=pCol\r\n}\r\nexport default function insertionSort(array){\r\n    \r\n    reset(array);\r\n    let t;\r\n    for(let i = 1; i < array.length; i++)\r\n    {\r\n        if(array[i][0]<array[i-1][0])\r\n        {\r\n            array[i][1]=sCol\r\n            t=array[i]\r\n            array[i]=array[i-1]\r\n            array[i-1]=t\r\n            \r\n            return array\r\n        }\r\n    }\r\n        \r\n}","import {pCol,sCol,tCol,qCol} from '../Visualizer'\r\n\r\n\r\nfunction len(array)\r\n{\r\n    let count = 0;\r\n    for(let i = 0; i < array.length; i++){\r\n        if(array[i][1]!=qCol)\r\n            count+=1;\r\n    }\r\n    return count\r\n}\r\n\r\nfunction reset(array){\r\n    for (let i=0;i<array.length;i++){\r\n        if(array[i][1]!=qCol)\r\n            array[i][1]=pCol\r\n        }\r\n}\r\n\r\n\r\nexport default function bubbleSort(array){\r\n    let t,i\r\n    for(i=1;i<array.length;i++)\r\n    {\r\n        if(array[i][0]<array[i-1][0] && array[i][1]!=tCol &&array[i-1][1]!=tCol)\r\n        {\r\n\r\n            \r\n            t=array[i]\r\n            array[i]=array[i-1]\r\n            array[i-1]=t\r\n            array[i][1]=sCol\r\n            array[i-1][1]=tCol\r\n            return array\r\n        }\r\n        \r\n    }\r\n    array[len(array)-1][1]=qCol\r\n    reset(array)\r\n    return array\r\n}","import {pCol,sCol,tCol,qCol} from '../Visualizer'\r\n\r\nfunction reset(array){\r\n    for (let i=0;i<array.length;i++)\r\n        array[i][1]=pCol\r\n}\r\n\r\n\r\nfunction sorted(array){\r\n    let isSorted = true;\r\n    for(let i=0;i<array.length-1;i++){\r\n        if(array[i][0]>array[i+1][0]){\r\n            isSorted=false;\r\n            break;\r\n        }\r\n    }\r\n    return isSorted;\r\n}\r\n\r\nexport default function shellSort(array){\r\n    \r\n    reset(array);\r\n    let t,gap=array.length;\r\nwhile(!sorted(array))\r\n{\r\n    gap=Math.floor(gap/2);\r\n    for(let i = gap; i < array.length; i++)\r\n    {\r\n        if(array[i][0]<array[i-gap][0])\r\n        {\r\n            array[i-gap][1]=tCol\r\n            array[i][1]=sCol\r\n            t=array[i]\r\n            array[i]=array[i-gap]\r\n            array[i-gap]=t\r\n            return array\r\n        }\r\n    }\r\n}\r\n}","import {pCol,sCol,tCol,qCol} from '../Visualizer'\r\n\r\nfunction len(array)\r\n{\r\n    let count = 0;\r\n    for(let i = 0; i < array.length; i++){\r\n        if(array[i][1]!=qCol)\r\n            count+=1;\r\n    }\r\n    return count\r\n}\r\n\r\nfunction reset(array){\r\n    for (let i=0;i<array.length;i++){\r\n        if(array[i][1]!=qCol)\r\n            array[i][1]=pCol\r\n        }\r\n}\r\n\r\nexport default function heapSort(array) {\r\n    let t,i,last=len(array)-1\r\n    reset(array)\r\n    while(last>0){\r\n        for(i = 0;i<(last+1)/2;i++){\r\n\r\n            if (2*i+1<=last && array[i][0]<array[2*i+1][0])\r\n            {\r\n                t=array[i];\r\n                array[i]=array[2*i+1];\r\n                array[2*i+1]=t;\r\n                array[i][1]=sCol\r\n                array[2*i+1][1]=tCol\r\n                return array\r\n            }\r\n\r\n            if (2*i+2<=last && array[i][0]<array[2*i+2][0])\r\n            {\r\n                t=array[i];\r\n                array[i]=array[2*i+2];\r\n                array[2*i+2]=t;\r\n                array[i][1]=sCol\r\n                array[2*i+2][1]=tCol\r\n                return array\r\n            }\r\n\r\n        }\r\n        t=array[0];\r\n        array[0]=array[last];\r\n        array[last]=t;\r\n        array[last][1]=qCol\r\n        return array\r\n\r\n    }   \r\n};\r\n","import {pCol,sCol,tCol,qCol} from '../Visualizer'\r\n\r\nfunction reset(array){\r\n    for (let i=0;i<array.length;i++){\r\n        if(array[i][1]!='limegreen')\r\n            array[i][1]='dodgerblue'\r\n        }\r\n}\r\n\r\nfunction findPivot(array){\r\n    let i,p,tbi,tsi;\r\n    for(i=0;i<array.length;i++)\r\n    {\r\n        if(array[i][1]!=qCol){\r\n            p = i;\r\n            break;\r\n        }\r\n    }\r\n\r\n    tbi=p+1\r\n    tsi=tbi\r\n    while(array[tsi][1]!=qCol&&tsi<array.length-1)\r\n        tsi++\r\n    if(array[tsi][1]==qCol)\r\n        tsi-=1\r\n    return {p:p,tbi:tbi,tsi:tsi}\r\n}\r\n\r\n\r\nexport default function quickSort(array) {\r\n    reset(array)\r\n    let {p,tbi,tsi} = findPivot(array);\r\n    let t;\r\n    array[p][1]=sCol\r\n  \r\n    if(array[p+1][1]==qCol)\r\n    {\r\n        array[p][1]=qCol\r\n        return array\r\n    }\r\n\r\n\r\n    while(tsi>=tbi){\r\n        while(array[tbi]!=undefined&&array[tbi][0]<=array[p][0]){\r\n            tbi++;\r\n        }\r\n        while(array[tsi][0]>array[p][0]){\r\n            tsi--;\r\n        }\r\n\r\n        if (tsi>=tbi)\r\n        {\r\n            array[tsi][1]=tCol\r\n            array[tbi][1]=tCol\r\n            t=array[tsi];\r\n            array[tsi]=array[tbi];\r\n            array[tbi]=t;\r\n            return array;\r\n        }\r\n        if(tsi<tbi){\r\n            array[tsi][1]=sCol\r\n            array[p][1]=qCol\r\n            t=array[tsi];\r\n            array[tsi]=array[p];\r\n            array[p]=t;\r\n            return array\r\n        }\r\n    }\r\n};\r\n","import {pCol,sCol,tCol,qCol} from '../Visualizer'\r\n\r\nfunction sorted(array){\r\n    let isSorted = true;\r\n    for(let i=0;i<array.length-1;i++){\r\n        if(array[i][0]>array[i+1][0]){\r\n            isSorted=false;\r\n            break;\r\n        }\r\n    }\r\n    return isSorted;\r\n}\r\n\r\nfunction setComCol(A,col){\r\n    for(let i=0;i<A.length;i++){\r\n        A[i][1]=col\r\n    }\r\n}\r\nfunction reset(array){\r\n    for (let i=0;i<array.length;i++){\r\n        array[i][1]=pCol\r\n    }\r\n}\r\n\r\nfunction join(arrayL,arrayR,array){\r\n    for(let i=0;i<arrayL.length;i++)\r\n        array[i]=arrayL[i]\r\n    for(let i=0,j=arrayL.length;i<arrayR.length,j<array.length;i++,j++)\r\n        array[j]=arrayR[i]    \r\n}\r\n\r\nexport default function mergeSort(array) {\r\n    let startIndex=0,stopIndex=array.length-1,mid=Math.floor((startIndex+stopIndex)/2);\r\n    let n1 = mid-startIndex+1, n2=stopIndex-mid,i,j,t;\r\n    let L =[], R=[];\r\n    reset(array)\r\n\r\n    for(i=0;i<n1;i++)\r\n        L.push(array[i])\r\n\r\n    for(i=mid+1;i<array.length;i++)\r\n        R.push(array[i])\r\n\r\n        if(n1!=1&&!sorted(L)){\r\n            mergeSort(L) \r\n            join(L,R,array)\r\n            return array\r\n        }\r\n\r\n        if(n2!=1&&!sorted(R)){\r\n            mergeSort(R)\r\n            join(L,R,array)\r\n            return array\r\n        }\r\n\r\n        (merge(L,R,array))\r\n        return array\r\n};\r\n\r\nfunction merge(arrayL,arrayR,array){\r\n    let i=0,j=0,k=0;\r\n    setComCol(arrayL,tCol)\r\n    setComCol(arrayR,tCol)\r\n    while (i<arrayL.length && j<arrayR.length)\r\n    {\r\n        if (arrayL[i][0]<=arrayR[j][0])\r\n        {\r\n            array[k]=arrayL[i];\r\n            i++;\r\n        }\r\n        else\r\n        {\r\n            array[k]=arrayR[j];\r\n            j++;\r\n        }\r\n        k++;\r\n    }\r\n    while (i<arrayL.length)\r\n        {\r\n            array[k] = arrayL[i];\r\n        i++;\r\n        k++;\r\n    }\r\n        while (j < arrayR.length) {\r\n        array[k] = arrayR[j];\r\n        j++;\r\n        k++;\r\n    }\r\n}","import React,{useState,useEffect} from 'react'\r\nimport './visualize.css'\r\nimport selectionSort from './Algorithms/selectionSort'\r\nimport insertionSort from './Algorithms/insertionSort'\r\nimport bubbleSort from './Algorithms/bubbleSort'\r\nimport shellSort from './Algorithms/shellSort'\r\nimport heapSort from './Algorithms/heapSort'\r\nimport quickSort from './Algorithms/quickSort'\r\nimport mergeSort from './Algorithms/mergeSort'\r\n\r\n//------------------------------->Bar colors\r\nexport const pCol = 'dodgerblue'\r\nexport const sCol = 'red'\r\nexport const tCol = 'yellow'\r\nexport const qCol = 'limegreen'\r\nconst platformColor='blue'\r\n//-------------------------------X\r\n\r\nfunction Visualizer() {\r\n\r\n//--------------------------------------------------------------------------------------------> Choices variables\r\n    const algosArray=['Selection sort','Insertion sort','Bubble sort','Shell sort','Heap sort','Quick sort','Merge sort']\r\n    const sizesArray=['XS','S','M','L','XL']\r\n    const [algo,setAlgo]=useState('Selection sort')\r\n    const [size,setSize]=useState('XS')\r\n    const[reGen,setReGen]=useState(0)\r\n    const[active,setActive]=useState(false)\r\n    const[activity,setActivity]=useState(active)\r\n    const [disable,setDisable]= useState(false)\r\n//--------------------------------------------------------------------------------------------X\r\n\r\n//--------------------------------------------------------------------------------------------> Visualizer variables\r\n\r\n    function createArray(arraySize){\r\n        let A=[]\r\n        for(let i =0;i<arraySize;i++){\r\n            A.push(Math.floor(Math.random()*(700-10+1))+10)\r\n        }\r\n        return A\r\n    } \r\n\r\n    function sorted(array){\r\n        let isSorted = true;\r\n        for(let i=0;i<array.length-1;i++){\r\n            if(array[i][0]>array[i+1][0])\r\n                isSorted=false;\r\n        }\r\n        return isSorted;\r\n    }\r\n\r\n    //------------------------------------------------> Array properties control\r\n    const sizeOfArray= {XS:8,S:27,M:45,L:100,XL:212}\r\n    const widthOfBars= {XS:132,S:39,M:23.5,L:10.5,XL:5}\r\n    //------------------------------------------------X\r\n    \r\n    //------------------------------------------------> Sorting speed control\r\n    const sortingSpeed= {\r\n        'Selection sort':{XS:500,S:100,M:50,L:10,XL:0},\r\n        'Insertion sort':{XS:500,S:100,M:50,L:10,XL:0},\r\n        'Bubble sort':{XS:150,S:70,M:25,L:7.5,XL:0},\r\n        'Shell sort':{XS:500,S:100,M:50,L:10,XL:0},\r\n        'Heap sort':{XS:250,S:70,M:25,L:5,XL:0},\r\n        'Quick sort':{XS:500,S:250,M:125,L:75,XL:15},\r\n        'Merge sort':{XS:800,S:750,M:500,L:350,XL:300}\r\n    }\r\n    \r\n    const endingSpeed={\r\n        'Selection sort':10,\r\n        'Insertion sort':10,\r\n        'Bubble sort':10,\r\n        'Shell sort':10,\r\n        'Heap sort':10,\r\n        'Quick sort':10,\r\n        'Merge sort':500\r\n    }\r\n    //------------------------------------------------X\r\n\r\n    //Initial array creation [data,color]\r\n    const make=(createArray(Number(sizeOfArray[size])))\r\n    const[arrayToSort,setArrayToSort]= useState(make.map(data=>{return[data,pCol]}));\r\n    //const[sortedArray,setSortedArray]=useState(mySort(arrayToSort,0,1,arrayToSort.length-1))\r\n\r\n    //Create new array on changes\r\n    useEffect(()=>{\r\n            setArrayToSort(()=>{\r\n                const newArr = createArray(Number(sizeOfArray[size]))\r\n                return newArr.map(data=>{return[data,pCol]})})\r\n                //setSortedArray(mySort(arrayToSort,0,1,arrayToSort.length-1))\r\n            setActive(false)\r\n\r\n        },[size,reGen,algo])\r\n\r\n\r\n    //Sorting array and re-rendering\r\n    useEffect(()=>{\r\n        if(!sorted(arrayToSort)&&active){\r\n            if(algo=='Selection sort')\r\n                selectionSort(arrayToSort)\r\n            else if(algo =='Insertion sort')\r\n                insertionSort(arrayToSort)\r\n            else if(algo =='Bubble sort')\r\n                bubbleSort(arrayToSort)\r\n            else if(algo =='Shell sort')\r\n                shellSort(arrayToSort)\r\n            else if(algo =='Heap sort')\r\n                heapSort(arrayToSort)\r\n            else if(algo =='Quick sort')\r\n                quickSort(arrayToSort)\r\n            else if(algo =='Merge sort')\r\n                mergeSort(arrayToSort)\r\n                \r\n            setTimeout(()=>{setActivity(!activity)},sortingSpeed[algo][size])\r\n        }\r\n        else{\r\n            setTimeout(()=>{if(sorted(arrayToSort))\r\n                setArrayToSort(arrayToSort.map(x=>[x[0],qCol]))\r\n            setActive(false)\r\n            setDisable(false)},endingSpeed[algo])\r\n        }\r\n        },[activity])\r\n\r\n//--------------------------------------------------------------------------------------------X  \r\n    \r\n\r\n    return (\r\n        <>\r\n        {/*Display Choices*/}\r\n        <div className='grid' id='choices'>\r\n        <div>\r\n        <label htmlFor=\"pickAlgo\">Algorithm: </label>\r\n        <select disabled={disable} name={\"pickAlgo\"} id={\"pickAlgo\"} onChange={(e)=>{setAlgo(e.target.value)}} >\r\n            {algosArray.map(x=>{\r\n                return <option value={x}>{x}</option>\r\n            })}\r\n        </select>\r\n        </div> \r\n        <div>\r\n            <label htmlFor=\"arraySize\">Array Size: </label>\r\n        <select disabled={disable} name={'arraySize'} id={'arraySize'}  onChange={(e)=>{setSize(e.target.value)}} >\r\n        {sizesArray.map(x=>{\r\n            return <option value={x}>{x}</option>\r\n        })}\r\n        </select>\r\n        </div>\r\n\r\n        <div>\r\n            <button className={\"btn btn-primary\"} id={\"reGen\"} disabled={disable} onClick={()=> {setReGen(Math.random())}}>Generate New array</button>\r\n        </div>\r\n        <div>\r\n            <button className={\"btn btn-success\"} id={\"start\"} disabled={disable} onClick={()=> {setActive(true)\r\n            setActivity(!activity);\r\n            setDisable(true)\r\n            \r\n            }} >Start Sorting</button>\r\n        </div>\r\n        </div>\r\n        \r\n        <hr style={{backgroundColor: platformColor,borderColor: platformColor}}/>\r\n        \r\n        {/*Display Visualizer*/}\r\n        <div className=\"visual\" id=\"visualizer\">\r\n            {arrayToSort.map((x)=>{return <div \r\n            style={{'height':((Number(x[0])/2)+'px'), 'width':(widthOfBars[size]+'px'), 'background-color':x[1]}} \r\n            className='visualBars'\r\n            id={Number(x[0])/2+''}></div>})}\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Visualizer\r\n","import {pCol,sCol,tCol,qCol} from '../Visualizer'\r\n\r\n\r\nexport default function selectionSort (array){\r\n    let t;\r\n    for(let i=0;i<array.length;i++){\r\n        for(let j=i+1;j<array.length;j++){\r\n            array[i][1]=pCol\r\n            array[j][1]=pCol\r\n            if(array[i][0]>array[j][0]){\r\n                t=array[i];\r\n                array[i]=array[j];\r\n                array[j]=t;\r\n                array[i][1]=sCol\r\n                array[j][1]=tCol\r\n                return array\r\n            }\r\n\r\n        }\r\n    }\r\n}\r\n\r\n","import React,{useContext} from 'react'\r\nimport Visualizer from './Visualizer/Visualizer.jsx'\r\n\r\nfunction App() {\r\n    \r\n    return (\r\n        <>\r\n            <h1>Sorting Algorithm Visualizer</h1>\r\n            <br/>\r\n            <Visualizer />\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport $ from 'jquery'\r\nimport App from './App'\r\nimport './index.css'\r\nReactDOM.render(<App></App>,document.getElementById('root'))\r\n// if (module.hot) {\r\n//     module.hot.accept();\r\n//   }\r\n\r\n"],"sourceRoot":""}